.grid {
    display :grid;
    grid-template-columns: repeat(3,1fr);
    grid-auto-rows : minmax(100px auto);
    grid-gap:10px;
    margin:10px;
}

.grid-item1 {

}

.grid-item2 {
    grid-column : 2/4;
}


.grid-item3 {
    grid-column : 1/4;
}

.wrapper {
    display: grid;
    /* 
    grid-template-columns
    :columns의 개수와 크기를 지정
    1. 크기 여러 번 적어서 개수 지정
    2. 동일한 크기일 경우 repeat을 이용해서 개수 지정
    */
    grid-template-columns: repeat(3, 1fr);
    /* grid-gap: 그리드 요소사이의 거리 */
    grid-gap: 10px;
    /* 
    grid-auto-rows
    : row의 크기 지정, 개수는 자동으로 지정 
    */
    grid-auto-rows: minmax(100px, auto);
}


.one {
    /* 각 라인의 시작위치와 끝위치를 작성하여 크기작성*/
    grid-column: 1 / 3;
    /* 라인의 시작위치만 적어두면 그 위치에 하나의 크기*/
    grid-row: 1;
  }

/* 그리드 레이아웃정렬 */
.grid-center {
    display:grid;
    border : 3px solid blue;
    grid-template-columns: repeat(3,1fr );
    /* 정렬을 사용할 때 높이를 지정해야 아이템의 위치를 설정할 수 있음 */
    height: 300px;
    /* 아이템 크기를 고정해 아이템이 나가지 않게 하기 위함 */
    min-width:  319px; 
    /* 기본설정 stretch */
    /* 가로정렬 및 세로정렬 */
    justify-items: flex-end;
    /*세로정렬 : 전체가 이동*/
    align-content: center;
}

.grid-item {
    /* 아이템의 크기를 설정하지 않으면 
    자동으로 그리드컨테이너 맞춤으로 들어감 */
    width:100px;
    height:100px;
}

.add-align {
    /* /개별 세로정렬 : align이 stretch일 때 사용*/
    background-color: blanchedalmond;
    align-self : baseline;  
    justify-self : left;
}
